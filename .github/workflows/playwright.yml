name: Playwright Tests
on:
  push:
    branches: [ test-run**, main ]
  pull_request:
    branches: [ main, master ]

  workflow_dispatch:

jobs:
  test:
    permissions:
      contents: write
      pull-requests: write
     

    timeout-minutes: 60

    runs-on: ubuntu-latest
    steps:
    - name: checkout repo
      uses: actions/checkout@v4

    - name: setup node
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Cache Node Modules
      id: cache-node-modules
      uses: actions/cache@v4
      with:
        path: |
          node_modules
        key: modules-${{ hashFiles('package-lock.json') }}
    

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      id: tests
      run: npx playwright test

    - name: Setup Pages
      if: ${{ contains(github.ref,'main')}}
      uses: actions/configure-pages@v3

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: github-pages
        path: playwright-report/
        retention-days: 5

   

 #   - name: Upload Artifact
  #   # if: ${{ contains(github.ref,'main')}}
   #   uses: actions/upload-pages-artifact@v1
    #  with:
     #   # location of the coverage artifacts
      #  path: "./playwright-report"
      
    - uses: mshick/add-pr-comment@v2
      if: always()
      with:
          message-path: |
            result.txt
          message-failure: |
            Workflow failed


  deploy:
    if:  ${{ contains(github.ref,'main')}}
    runs-on: ubuntu-18.04
    needs: test

    permissions: 
      pages: write
      id-token: write

    environment:
        # environment created automatically by GitHub
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}

    steps:
          - name: Deploy to GitHub Pages
            id: deployment
            uses: actions/deploy-pages@v2

          
